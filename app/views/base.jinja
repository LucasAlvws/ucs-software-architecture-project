<!DOCTYPE html>
<html lang="en">
<head>
    {% block head %}
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <script src="https://unpkg.com/htmx.org@2.0.4"></script>
    <title>{% block title %}{% endblock %}</title>
    {% endblock %}
</head>
<body class="bg-gray-100">
<script>
function saveFilterToLocalStorage(event) {
    event.preventDefault(); // Impede o envio automático do formulário

    const form = document.getElementById("filter-form");
    const formData = new FormData(form);

    const filter = {
        year: formData.get("year"),
        mode: formData.get("mode"),
        state: formData.get("state")
    };

    // Recupera filtros anteriores
    let recentFilters = JSON.parse(localStorage.getItem("recentFilters") || "[]");

    // Adiciona o novo filtro no início
    recentFilters.unshift(filter);

    // Mantém só os 2 últimos
    recentFilters = recentFilters.slice(0, 2);

    localStorage.setItem("recentFilters", JSON.stringify(recentFilters));

    // Agora envia o formulário normalmente (com HTMX)
    form.submit();
}

function applySavedFilter(index) {
    const recentFilters = JSON.parse(localStorage.getItem("recentFilters") || "[]");
    const filter = recentFilters[index];

    if (!filter) return;

    const form = document.getElementById("filter-form");

    // Define os valores dos selects
    document.getElementById("year").value = filter.year;
    document.getElementById("mode").value = filter.mode;
    document.getElementById("state").value = filter.state;

    // Dispara o submit HTMX do formulário
    setTimeout(() => {
        form.dispatchEvent(new Event("submit", { cancelable: true, bubbles: true }));
    }, 300);
}
</script>

    <div id="wrapper" class="w-full max-w-4xl mx-auto px-4 flex flex-col">
    {% block content %}{% endblock %}
    </div>
</body>
</html>
